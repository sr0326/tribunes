<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.sr.dao.DownFileDao">
	<resultMap type="DownFile" id="getUserMap">	
		<id column="fileId" property="fileId" />
		<id column="fileName" property="fileName" />
		<id column="downtypeid" property="downtypeid" />
		<id column="filetype" property="filetype" />
		<id column="userid" property="userid" />
		<id column="uploadtime" property="uploadtime" />
		<id column="uploadtime" property="uploadtime" />
		<id column="downtime" property="downtime" />
		<id column="filesize" property="filesize" />
		<id column="need_score" property="need_score" />
		<id column="url" property="url" />
		<id column="upfilestate" property="upfilestate" />
		<association property="uindo" javaType="UserInfo">
			<id column="userId" property="userId" />
			<id column="nickname" property="nickname" />
			<id column="realName" property="realName" />
			<id column="phone" property="phone" />
			<id column="usepwd" property="usepwd" />
			<id column="sex" property="sex" />
			<id column="birthday" property="birthday" />
			<id column="curjob" property="curjob" />
			<id column="selfdesc" property="selfdesc" />
			<id column="pic" property="pic" />
			<id column="integral" property="integral" />
		</association>
	</resultMap>
	
	<resultMap type="DownFile" id="gettypeMap">	
		<id column="fileId" property="fileId" />
		<id column="fileName" property="fileName" />
		<id column="downtypeid" property="downtypeid" />
		<id column="filetype" property="filetype" />
		<id column="userid" property="userid" />
		<id column="uploadtime" property="uploadtime" />
		<id column="uploadtime" property="uploadtime" />
		<id column="downtime" property="downtime" />
		<id column="filesize" property="filesize" />
		<id column="need_score" property="need_score" />
		<id column="url" property="url" />
		<id column="upfilestate" property="upfilestate" />
		<association property="dtype" javaType="DownType">
			<id column="downtypeid" property="downtypeid" />
			<id column="downtypeName" property="downtypeName" />
		</association>
	</resultMap>
	
	<!-- public List<DownFile> queryDownFile(Integer downtypeid,String fileName,Integer fileid,Integer userid,Integer filetype); -->
	<select id="queryDownFile" resultMap="getUserMap">
		select df.*,ui.* from downfile df,userinfo ui where ui.userId=df.userid
		<if test="param1 != null and param1 != ''">
			and df.downtypeid=#{param1}
		</if>
		<if test="param2 != null and param2 != ''">
			and df.fileName like concat('%',#{param2},'%')
		</if>
		<if test="param3 != null and param3 != ''">
			and df.fileId not in (#{param3})
		</if>
		<if test="param4 != null and param4 != ''">
			and df.userid=#{param4}
		</if>
		<if test="param5 != null and param5 != ''">
			and df.filetype=#{param5}
		</if>
	</select>
	
	<!-- public DownFile queryById(Integer fileid); -->
	<select id="queryById" resultMap="gettypeMap">
		select df.*,dt.* from downfile df,downtype dt where
		dt.downtypeid=df.downtypeid and df.fileId=#{param1}
	</select>
	
	<!-- public List<DownFile> recommend(Integer page); -->
	<select id="recommend" resultMap="getUserMap">
		select df.*,ui.* from downfile df,userinfo ui where ui.userId=df.userid
		order by downtime limit 5
	</select>
	
	<!-- public List<DownFile> BynewTime(); -->
	<select id="BynewTime" resultMap="getUserMap">
		select df.*,ui.* from downfile df,userinfo ui where ui.userId=df.userid
		order by uploadtime
	</select>
	
	<!-- public DownFile queryUser(Integer fileid); -->
	<select id="queryUser" resultMap="getUserMap">
		select df.*,ui.* from downfile df,userinfo ui where ui.userId=df.userid
		<if test="_parameter != null and _parameter != ''">
			and df.fileId=#{fileid}
		</if>
	</select>
	
	<!-- public List<DownFile> queryByUseridfiles(String userid,Integer fileid); -->
	<select id="queryByUseridfiles" resultMap="gettypeMap">
		select df.*,dt.* from downfile df,downtype dt where
		dt.downtypeid=df.downtypeid and df.userid=#{param1}
		and df.fileid not in (#{param2})
	</select>
	
	<!-- public List<Map<String,Object>> queryPaiming(String userid); -->
	<select id="queryPaiming" resultType="Map">
		select ui.integral,count(df.fileId) upload,dre.down,pm.rownum,
		ui.userId from (select u.userId,u.integral,u.rownum from 
		(select obj.userId,obj.integral,@rownum:=@rownum+1 as num_tmp,
		@incrnum:=case when @rowtotal=obj.integral then @incrnum when 
		@rowtotal:=obj.integral then @rownum end as rownum from 
		(select userId,integral from userinfo order by integral desc) 
		as obj,(select @rownum:=0,@rowtotal:=null,@incrnum:=0) r) as u 
		where u.userId=#{userid}) pm,(select count(downid) down from 
		downresource where userid=#{userid}) dre, userinfo ui,downfile df 
		where df.userid=ui.userId and df.userid=#{userid} group by 
		ui.integral,dre.down,ui.userId,pm.rownum
	</select>
	
</mapper>
